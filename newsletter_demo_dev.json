{
  "name": "newsletter-demo-dev",
  "nodes": [
    {
      "parameters": {
        "url": "https://openapi.naver.com/v1/search/news.json",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "query",
              "value": "={{ $json.query }}"
            },
            {
              "name": "display",
              "value": "20"
            }
          ]
        },
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "X-Naver-Client-Id",
              "value": "=ukBNYmnsfjlX82JImWyp"
            },
            {
              "name": "X-Naver-Client-Secret",
              "value": "Nz6VHqzBjR"
            }
          ]
        },
        "options": {
          "timeout": 10000
        }
      },
      "id": "75963888-ba4f-4a58-a5db-8dbc4973358b",
      "name": "네이버 뉴스 검색 (Naver API)",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 3,
      "position": [
        360,
        100
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://hyperclova-x-alpha-helsinki-agent-hotfix-250611.clops-inference.clova.ai/v2/generate",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "Bearer clops_7c8807d97ec8780cb11ac98061dc"
            },
            {
              "name": "Content-Type",
              "value": "application/json"
            },
            {
              "name": "charset",
              "value": "utf-8"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"top_k\": 1,\n  \"stop\": [\"<|stop|>\", \"<|endofturn|>\"],\n  \"max_tokens\": 8154,\n  \"temperature\": 0.5,\n  \"repeat_penalty\": 1.0,\n  \"prompt\": \"<|im_start|>system\\n당신은 경험 많은 뉴스레터 편집장입니다. 독자의 관심사(query)와 정렬 기준(sorting)에 맞춰 기사를 평가하는 전문가입니다.\\n\\n작업 순서:\\n1. query와 sorting을 분석하여 정확한 평가 기준을 수립하세요\\n2. sorting이 있다면 반드시 그것을 최우선 기준으로 삼으세요\\n3. 각 기사가 sorting 기준에 얼마나 부합하는지 구체적으로 평가하세요\\n4. 모든 기사에 순위를 매기되, sorting 기준에 가장 잘 맞는 순서로 정렬하세요\\n\\n중요: sorting이 \\\"신모델 개발\\\"이면 실제 AI 모델을 새로 개발하는 내용을 최우선으로, \\\"투자 동향\\\"이면 투자 관련 내용을 최우선으로 평가하세요.\\n\\n반드시 다음 JSON 형식으로만 출력하세요:\\n{\\n  \\\"query_analysis\\\": {\\n    \\\"main_interest\\\": \\\"독자의 핵심 관심사\\\",\\n    \\\"sorting_focus\\\": \\\"정렬 기준의 핵심 포인트\\\",\\n    \\\"evaluation_criteria\\\": [\\\"기준1\\\", \\\"기준2\\\", \\\"기준3\\\"],\\n    \\\"total_articles\\\": 총_기사_개수\\n  },\\n  \\\"rankings\\\": [\\n    {\\\"rank\\\": 1, \\\"title\\\": \\\"기사 제목\\\", \\\"reason\\\": \\\"선정 이유 (sorting 기준 관련성 명시)\\\"},\\n    ... 모든 기사 포함 ...\\n  ]\\n}\\n\\nJSON 외에 다른 텍스트는 포함하지 마세요. #Example Input : query: AI 서비스 기획·개발\\nsorting: 신모델 개발\\n\\n다음 5개 기사를 모두 평가해주세요:\\n- SK텔레콤, 자체 AI 모델 기반한 문서 해석 기술 공개\\n- 크래프톤·SKT, 수학 특화 LLM 공동 개발\\n- 전북TP, ChatGPT 활용 교육 실시\\n- AI 인프라 판 키운 과기정통부\\n- 삼성전자, AI 칩 2나노 생산 #Example Output {\\n  \\\"query_analysis\\\": {\\n    \\\"main_interest\\\": \\\"AI 서비스의 기획과 개발\\\",\\n    \\\"sorting_focus\\\": \\\"새로운 AI 모델을 실제로 개발하는 활동\\\",\\n    \\\"evaluation_criteria\\\": [\\\"신규 AI 모델 개발 여부\\\", \\\"모델 개발의 기술적 구체성\\\", \\\"개발 성과의 혁신성\\\"],\\n    \\\"total_articles\\\": 5\\n  },\\n  \\\"rankings\\\": [\\n    {\\\"rank\\\": 1, \\\"title\\\": \\\"크래프톤·SKT, 수학 특화 LLM 공동 개발\\\", \\\"reason\\\": \\\"실제로 새로운 LLM 모델을 공동 개발하는 프로젝트로 신모델 개발에 정확히 부합\\\"},\\n    {\\\"rank\\\": 2, \\\"title\\\": \\\"SK텔레콤, 자체 AI 모델 기반한 문서 해석 기술 공개\\\", \\\"reason\\\": \\\"자체 AI 모델을 보유하고 있으나, 신규 개발보다는 기존 모델의 활용 기술에 가까움\\\"},\\n    {\\\"rank\\\": 3, \\\"title\\\": \\\"삼성전자, AI 칩 2나노 생산\\\", \\\"reason\\\": \\\"AI 모델 개발을 위한 하드웨어 인프라이지만 모델 자체 개발은 아님\\\"},\\n    {\\\"rank\\\": 4, \\\"title\\\": \\\"AI 인프라 판 키운 과기정통부\\\", \\\"reason\\\": \\\"AI 개발 환경 조성에 기여하지만 직접적인 모델 개발은 아님\\\"},\\n    {\\\"rank\\\": 5, \\\"title\\\": \\\"전북TP, ChatGPT 활용 교육 실시\\\", \\\"reason\\\": \\\"기존 모델 활용 교육으로 신모델 개발과는 관련성이 낮음\\\"}\\n  ]\\n}<|im_end|>\\n<|im_start|>user\\nquery: {{ $node['query'].json.query }}\\nsorting: {{ $node['query'].json.sorting }}\\n\\n다음 {{$json.title.length}}개 기사를 모두 평가해주세요:\\n\\n{{$json.title}}<|im_end|>\\n<|im_start|>assistant\\n {\\n  \\\"query_analysis\\\"\"\n}",
        "options": {
          "batching": {
            "batch": {
              "batchSize": 20
            }
          }
        }
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        840,
        100
      ],
      "id": "a448db36-4f16-48e4-aaca-38fee166fa56",
      "name": "HCX 뉴스 기사 리랭킹"
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3.2,
      "position": [
        1140,
        100
      ],
      "id": "d458bf04-229b-49e8-a477-d1869542c6df",
      "name": "Merge"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "0a14fc15-dcc7-4715-b0bb-7ad2d0be136f",
              "name": "query",
              "value": "={{ $json.query }}",
              "type": "string"
            },
            {
              "id": "6bde02c7-c86c-4250-90c9-2bb4744fa4d0",
              "name": "address",
              "value": "={{ $json.address }}",
              "type": "string"
            },
            {
              "id": "1e185e3f-3385-4e43-a149-d6a11b18fb2e",
              "name": "language",
              "value": "={{ $json.language }}",
              "type": "string"
            },
            {
              "id": "92f41a4b-c213-4c34-b1c9-325910c096b3",
              "name": "sorting",
              "value": "={{ $json.sorting }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        220,
        100
      ],
      "id": "7656dd62-35b3-4d64-a5d8-3d3c32aa0b28",
      "name": "query"
    },
    {
      "parameters": {
        "content": "## 키워드 기반 네이버 뉴스 목록 스크랩\n네이버 뉴스 API 활용 \n",
        "height": 260,
        "width": 600
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        200,
        0
      ],
      "id": "49c9d8e0-6b32-4a96-8c99-e1df8f9a9cc5",
      "name": "Sticky Note"
    },
    {
      "parameters": {
        "content": "## 네이버 뉴스 기사 Re-ranking\nHelsinki-alpha model 사용 (chat model 아님) \n\n",
        "height": 260,
        "width": 720
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        820,
        0
      ],
      "id": "233cc4ee-888e-4109-ac66-ad75c883b3c6",
      "name": "Sticky Note1"
    },
    {
      "parameters": {
        "jsCode": "/* ---------- 0) 오늘 날짜 ---------- */\nconst dateStr = new Date().toLocaleDateString('ko-KR', {\n  year:  'numeric',\n  month: 'long',\n  day:   'numeric',\n});\n\n/* ---------- 공통 상수 ---------- */\nconst OUTER_WRAP = `\n  width:100%;\n  max-width:600px;\n  border:1px solid #d9d9d9;\n  border-radius:8px;\n  font-family:Arial,Helvetica,sans-serif;\n  overflow:hidden;\n`;\n\n/* ---------- 1) HEADER ---------- */\nconst headerHtml = `\n  <table role=\"presentation\" width=\"100%\" cellpadding=\"0\" cellspacing=\"0\"\n         style=\"width:100%;margin:0 auto 32px;\">\n    <tr><td align=\"center\">\n      <table role=\"presentation\" cellpadding=\"0\" cellspacing=\"0\" style=\"${OUTER_WRAP}\">\n        <tr><td style=\"background:#61ba7a;padding:24px;text-align:center;\">\n\n          <!-- 메인 타이틀 -->\n          <span style=\"display:block;font-size:28px;font-weight:bold;color:#fff;line-height:1.3;\">\n            &nbsp;HyperClova&nbsp;News&nbsp;Letter\n          </span>\n\n          <!-- 안내 문구 (개선·피드백 문구) -->\n          <span style=\"display:block;margin-top:6px;font-size:13px;color:#e9ffe5;line-height:1.4;\">\n            본 뉴스레터는 AI 기술을 활용해 자동으로 수집·선별·가공된 콘텐츠입니다.<br/>\n            더 나은 서비스를 위해 지속적으로 개선하고 있으니, 소중한 의견을 부탁드립니다.\n          </span>\n\n        </td></tr>\n      </table>\n    </td></tr>\n  </table>\n`;\n\n/* ---------- 2) 본문 ---------- */\nconst bodyPlaceholder = $input.first().json.htmlBlocks;\n\n\n/* ---------- 4) FOOTER ---------- */\nconst footerHtml = `\n  <table role=\"presentation\" width=\"100%\" cellpadding=\"0\" cellspacing=\"0\" style=\"width:100%;margin:32px auto 0 auto;\">\n    <tr><td align=\"center\">\n      <table role=\"presentation\" cellpadding=\"0\" cellspacing=\"0\" style=\"${OUTER_WRAP}\">\n        <tr><td style=\"background:#222;padding:24px;color:#fff;font-size:12px;line-height:1.6;text-align:left;\">\n          <p style=\"margin:0 0 12px 0;\">\n            위 전자우편 및 그에 포함된 정보는 위에 기재된 수신인만을 위해 발송되는 것으로서 보안을\n            유지해야 하는 정보 및 법률상 또는 다른 사유로 인하여 공개가 금지된 정보가 들어 있을 수 있습니다.\n            귀하가 이 전자우편의 지정 수신인이 아니면 이를 무단으로 보유, 복제, 전송, 배포, 공개할 수 없으며,\n            일부의 내용이라도 보유, 복제, 배포, 공개해서는 안됩니다. 잘못 수신된 경우에는 즉시\n            <a href=\"mailto:dl_ncloud_privacy@navercorp.com\" style=\"color:#61ba7a;text-decoration:none;\">네이버 클라우드 개인정보보호(dl_ncloud_privacy@navercorp.com)</a>로\n            연락하여 주시고, 원본 및 사본과 그에 따른 첨부 문서를 모두 삭제하여 주시기 바랍니다.\n          </p>\n          <p style=\"margin:0;\">\n            This email and the information contained in this email are intended solely for the recipient(s) addressed above\n            and may contain information that is confidential and/or privileged or whose disclosure is prohibited by law or\n            other reasons. If you are not the intended recipient, any unauthorized storage, duplication, dissemination,\n            distribution or disclosure is strictly prohibited. If you received this email in error, please immediately\n            contact <a href=\"mailto:dl_ncloud_privacy@navercorp.com\" style=\"color:#61ba7a;text-decoration:none;\">NAVER Cloud Privacy</a>\n            and delete this email and any copies/attachments from your system.\n          </p>\n        </td></tr>\n      </table>\n    </td></tr>\n  </table>\n`;\n\n/* ---------- 5) 최종 HTML ---------- */\nconst finalHtml = headerHtml + bodyPlaceholder + footerHtml;\n\n/* ---------- 6) 반환 ---------- */\nreturn [\n  { json: { htmlBlocks: finalHtml } }\n];"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        1740,
        100
      ],
      "id": "d83f0d54-5faa-41cc-9654-83ac85e7c93f",
      "name": "Header/Footer HTML4"
    },
    {
      "parameters": {
        "fromEmail": "raphael825@naver.com",
        "toEmail": "={{ $node[\"query\"].json.address }}",
        "subject": "=AI 뉴스레터 - {{ $node[\"query\"].json.query }}",
        "emailFormat": "html",
        "html": "={{ $json.htmlBlocks }}",
        "options": {}
      },
      "id": "8a4e4e9f-1c09-4f97-be11-a6d36036dc1e",
      "name": "이메일 발송",
      "type": "n8n-nodes-base.emailSend",
      "typeVersion": 2,
      "position": [
        1900,
        100
      ],
      "webhookId": "4dd3504c-cc2b-477e-83ae-e4ea472ab20e",
      "credentials": {
        "smtp": {
          "id": "FP2VjQFtER33dKXx",
          "name": "SMTP account"
        }
      }
    },
    {
      "parameters": {
        "content": "## 뉴스레터 전송 \n",
        "height": 260,
        "width": 480
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        1560,
        0
      ],
      "id": "0858723f-1548-4b56-8d3b-2f56f787ff06",
      "name": "Sticky Note2"
    },
    {
      "parameters": {
        "jsCode": "/**\n * n8n Function ▸ \"HTML 이메일 생성\"\n * ─────────────────────────────────────────\n * 인풋: 각 아이템에 rank, title, reason, link, pubDate, description 필드\n * 아웃: [{ json: { htmlBlocks: … } }]\n */\n\nconst dateStr = new Date().toLocaleDateString('ko-KR', {\n  year: 'numeric', month: 'long', day: 'numeric',\n});\n\n/* 공통 스타일 */\nconst WRAPPER_STYLE = `\n  width:100%;max-width:600px;border:1px solid #d9d9d9;border-radius:8px;\n  font-family:Arial,Helvetica,sans-serif;\n`;\n\n/* 미리보기 블록 */\nconst previewTitles = items.slice(0, 5)\n  .map((item, idx) => `${idx + 1}. ${item.json.title}`)\n  .join('<br/>');\n\nconst previewHtml = `\n  <table role=\"presentation\" width=\"100%\" cellpadding=\"0\" cellspacing=\"0\" style=\"width:100%;margin:0 auto 32px;\">\n    <tr><td align=\"center\">\n      <table role=\"presentation\" cellpadding=\"0\" cellspacing=\"0\" style=\"${WRAPPER_STYLE}\">\n        <tr><td style=\"padding:24px;\">\n          <h2 style=\"margin:0 0 16px;font-size:24px;font-weight:bold;color:#61ba7a;\">${dateStr} AI 주요 소식 TOP 5</h2>\n          <p style=\"font-size:16px;line-height:1.6;color:#111;margin:0;\">${previewTitles}</p>\n        </td></tr>\n      </table>\n    </td></tr>\n  </table>\n`;\n\n/* 기사 카드 (피드백 제거) */\nconst cardsHtml = items.slice(0, 10).map(item => {\n  const a = item.json;\n\n  const rankLabel = a.rank\n    ? `<p style=\"font-size:14px;color:#61ba7a;margin:0 0 4px;font-weight:bold;\">AI 관련도 ${a.rank}위</p>`\n    : '';\n\n  const reasonBlock = a.reason\n    ? `<div style=\"background:#f5f5f5;padding:12px;border-radius:6px;margin:0 0 16px;\">\n         <p style=\"font-size:14px;color:#666;margin:0;font-style:italic;\">\n           💡 선정 이유: ${a.reason}\n         </p>\n       </div>`\n    : '';\n\n  const body = a.description\n    ? `<p style=\"font-size:16px;line-height:1.6;margin:0 0 18px;color:#333;\">\n         ${a.description.substring(0, 200)}${a.description.length > 200 ? '...' : ''}\n       </p>`\n    : '';\n\n  const pubDateLabel = a.pubDate\n    ? `<p style=\"font-size:13px;color:#999;margin:0 0 12px;\">\n         📅 ${new Date(a.pubDate).toLocaleDateString('ko-KR', {\n           year: 'numeric', month: 'long', day: 'numeric', hour: '2-digit', minute: '2-digit'\n         })}\n       </p>`\n    : '';\n\n  return `\n    <table role=\"presentation\" width=\"100%\" cellpadding=\"0\" cellspacing=\"0\" style=\"width:100%;margin:0 auto 32px;\">\n      <tr><td align=\"center\">\n        <table role=\"presentation\" cellpadding=\"0\" cellspacing=\"0\" style=\"${WRAPPER_STYLE}\">\n          <tr><td style=\"padding:24px;\">\n\n            ${rankLabel}\n\n            <h2 style=\"margin:0 0 16px;font-size:22px;line-height:1.3;\">\n              <a href=\"${a.link || a.url}\" style=\"color:#61ba7a;text-decoration:none;\">${a.title}</a>\n            </h2>\n\n            ${pubDateLabel}\n            ${reasonBlock}\n            ${body}\n\n            <a href=\"${a.link || a.url}\" style=\"color:#61ba7a;font-size:16px;font-weight:bold;text-decoration:none;\">\n              자세히 보기 →\n            </a>\n\n          </td></tr>\n        </table>\n      </td></tr>\n    </table>\n  `;\n}).join('');\n\n/* 결과 반환 */\nreturn [{ json: { htmlBlocks: previewHtml + cardsHtml } }];"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        1580,
        100
      ],
      "id": "828c193a-8d23-4950-8c5b-fb9d1ed70c2f",
      "name": "News Block HTML"
    },
    {
      "parameters": {
        "content": "## Web 연결 \n",
        "height": 260,
        "width": 180
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        0,
        0
      ],
      "id": "e6a73b51-11e7-4649-9b72-350d64af5e38",
      "name": "Sticky Note3"
    },
    {
      "parameters": {
        "jsCode": "/**\n * n8n Code node\n * INPUT  : 섞여-있는  items  ( ① rank·reason 전용 ② link·pubDate·description 전용 )\n * OUTPUT : 두 정보를 합쳐 완전한 단일 JSON 배열\n *          {title, link, pubDate, description, rank, reason}\n */\n\nconst THRESHOLD = 0.45;  // 제목 유사도 임계값(0~1)―낮출수록 관대한 병합\n\n/* 유사도: 공백·구두점 제거 후 Jaccard */\nfunction similarity(a, b) {\n  const clean = s => s.toLowerCase().replace(/[^\\p{L}\\p{N}\\s]/gu,'');\n  const A = new Set(clean(a).split(/\\s+/));\n  const B = new Set(clean(b).split(/\\s+/));\n  const inter = [...A].filter(x => B.has(x)).length;\n  return inter / (A.size + B.size - inter || 1);\n}\n\n/* 누적 Map  titleKey → 객체 */\nconst merged = [];\n\nfor (const { json } of items) {\n  const cur = { ...json };                       // 복사\n  const title = cur.title?.trim();\n  if (!title) continue;\n\n  // 가장 유사한 기사 찾기\n  let bestIdx = -1, bestScore = 0;\n  merged.forEach((m, idx) => {\n    const s = similarity(title, m.title);\n    if (s > bestScore) { bestScore = s; bestIdx = idx; }\n  });\n\n  /* 새 그룹 */\n  if (bestScore < THRESHOLD) {\n    merged.push(cur);\n    continue;\n  }\n\n  /* 병합 – 빈 필드는 채워 넣기 */\n  const target = merged[bestIdx];\n  for (const k of ['link','pubDate','description','rank','reason']) {\n    if (target[k] === undefined || target[k] === null) target[k] = cur[k];\n  }\n}\n\n/* 정렬: rank 있는 건 오름차순, 없으면 뒤로 */\nmerged.sort((a,b)=> (a.rank??999) - (b.rank??999));\n\nreturn merged.map(j => ({ json: j }));"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        1280,
        100
      ],
      "id": "5abe1589-b230-4431-a325-8c0724895f59",
      "name": "랭킹 + 기존 데이터 통합"
    },
    {
      "parameters": {
        "jsCode": "/******************************************************************\n * n8n Code node   —   HyperCLOVA-X 뉴스 랭킹 파서 (Edge-case safe)\n * 입력 : $json.choices[0].text (임의 형식, <|im_end|> 포함)\n * 출력 : [{json:{rank,title,reason}}]  — rank 오름차순\n ******************************************************************/\n\nconst raw = $json.choices?.[0]?.text ?? '';\nconst body = raw.split('<|')[0];                 // 메타 토큰 제거\n\n/*---------------------------------------------------------------\n  STEP-1  순수 JSON 찾기   {...\"rankings\":[ {...}, ... ]}\n----------------------------------------------------------------*/\ntry {\n  const firstBrace = body.indexOf('{');\n  if (firstBrace !== -1) {\n    // JSON.parse 에러 방지를 위해 마지막 '}' 위치까지 자름\n    const lastBrace = body.lastIndexOf('}');\n    if (lastBrace > firstBrace) {\n      const cleaned = body.slice(firstBrace, lastBrace + 1)\n                           .replace(/,\\s*}/g, '}')         // trailing comma\n                           .replace(/,\\s*]/g, ']');        // trailing comma\n      const obj = JSON.parse(cleaned);\n      if (Array.isArray(obj.rankings)) return obj.rankings\n        .map(({rank,title,reason}) => ({json:{rank,title,reason}}))\n        .sort((a,b)=>a.json.rank-b.json.rank);\n    }\n  }\n} catch (_) { /* 뚝—다음 단계 */ }\n\n/*---------------------------------------------------------------\n  STEP-2  객체 블록 단위 파싱  { \"rank\":n, \"title\":\"...\", ... }\n----------------------------------------------------------------*/\nconst blockRegex = /\\{[^{}]*?\"rank\"\\s*:\\s*\\d+[^{}]*?\"reason\"\\s*:\\s*\"[^\"]+?\"[^{}]*?}/gs;\nconst blocks = [...body.matchAll(blockRegex)].map(m=>m[0]);\nconst results = [];\n\nfor (const blk of blocks) {\n  try {\n    const safe = blk.replace(/,\\s*}/g,'}').replace(/,\\s*]/g,']');\n    const {rank,title,reason} = JSON.parse(safe);\n    results.push({rank,title,reason});\n  } catch {/* skip */}\n}\nif (results.length) {\n  results.sort((a,b)=>a.rank-b.rank);\n  return results.map(r=>({json:r}));\n}\n\n/*---------------------------------------------------------------\n  STEP-3  1-라인 패턴 파싱  \"rank\": n , \"title\": \"...\", \"reason\": \"...\"\n----------------------------------------------------------------*/\nconst lineRegex = /\"rank\"\\s*:\\s*(\\d+)[\\s\\S]+?\"title\"\\s*:\\s*\"([^\"]+?)\"[\\s\\S]+?\"reason\"\\s*:\\s*\"([^\"]+?)\"/g;\nlet m; let autoRank = 1;\nwhile ((m=lineRegex.exec(body))!==null) {\n  results.push({\n    rank:   Number(m[1]) || autoRank++,\n    title:  m[2],\n    reason: m[3]\n  });\n}\nif (!results.length) throw new Error('랭킹 정보를 찾지 못했습니다.');\n\nresults.sort((a,b)=>a.rank-b.rank);\n\n// 제목 중복 제거(첫 번째만 남김)\nconst seen = new Set();\nconst unique = results.filter(r=>{\n  if (seen.has(r.title)) return false;\n  seen.add(r.title); return true;\n});\n\nreturn unique.map(r=>({json:r}));"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        980,
        100
      ],
      "id": "4fddcbe6-aeff-4be1-bd6f-f8e1a4fad052",
      "name": "데이터 파싱"
    },
    {
      "parameters": {
        "jsCode": "/**\n * n8n Code node\n * 입력: HTTP Request 노드가 반환한 JSON\n * 목적: items[] 배열을 개별 아이템으로 분리 + 태그 제거\n * 출력: [{json:{title, link, pubDate, description}}, …]\n */\nconst raw = $json;                     // HTTP 노드에서 넘어온 한 덩어리\nconst list = raw.items ?? [];          // safety\n\nreturn list.map(i => ({\n  json: {\n    title:       i.title.replace(/<[^>]*>/g, ''),        // <b>태그 제거\n    link:        i.link,\n    pubDate:     i.pubDate,\n    description: i.description.replace(/<[^>]*>/g, '')\n  }\n}));"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        520,
        100
      ],
      "id": "d6eddbec-f64e-4979-9784-daa8df0359fb",
      "name": "API 필요 데이터 전처리"
    },
    {
      "parameters": {
        "fieldsToAggregate": {
          "fieldToAggregate": [
            {
              "fieldToAggregate": "title"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.aggregate",
      "typeVersion": 1,
      "position": [
        680,
        100
      ],
      "id": "5f77a9c1-aa9e-4a27-92ac-afacb50477c7",
      "name": "모델 입력 처리용 Flatten"
    },
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "newsletter-dev",
        "responseMode": "lastNode",
        "options": {
          "responseHeaders": {
            "entries": [
              {
                "name": "Access-Control-Allow-Origin",
                "value": "*"
              },
              {
                "name": "Access-Control-Allow-Methods",
                "value": "POST, OPTIONS"
              },
              {
                "name": "Access-Control-Allow-Headers",
                "value": "Content-Type, Accept"
              }
            ]
          }
        }
      },
      "id": "99cbabe4-f779-48c9-97a5-3efffbedf148",
      "name": "Webhook 트리거",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 1,
      "position": [
        40,
        100
      ],
      "webhookId": "research-webhook"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        1660,
        620
      ],
      "id": "f42f706c-4ed9-46c8-a982-c8b446201188",
      "name": "HTTP Request"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 3,
      "position": [
        1420,
        540
      ],
      "id": "14020cf6-7bdb-4fd9-a47d-38157d3c1c13",
      "name": "Loop Over Items"
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.noOp",
      "name": "Replace Me",
      "typeVersion": 1,
      "position": [
        1920,
        620
      ],
      "id": "b7eec2bb-4ebc-4db3-ac0c-ccbcc3605a06"
    },
    {
      "parameters": {
        "maxItems": 5
      },
      "type": "n8n-nodes-base.limit",
      "typeVersion": 1,
      "position": [
        1420,
        100
      ],
      "id": "9418f437-b494-4b06-be55-b860637609a4",
      "name": "Limit"
    },
    {
      "parameters": {
        "operation": "appendOrUpdate",
        "documentId": {
          "__rl": true,
          "value": "1SdhFhHhdvdWy0eroyrzMNggMAeG5wzImoGCtye7JjXQ",
          "mode": "list",
          "cachedResultName": "newsletter",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1SdhFhHhdvdWy0eroyrzMNggMAeG5wzImoGCtye7JjXQ/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": "gid=0",
          "mode": "list",
          "cachedResultName": "info",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1SdhFhHhdvdWy0eroyrzMNggMAeG5wzImoGCtye7JjXQ/edit#gid=0"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "address": "={{ $node[\"query\"].json.address }}",
            "keyword": "={{ $node[\"query\"].json.query }}",
            "sorting": "={{ $node[\"query\"].json.sorting }}",
            "language": "={{ $node[\"query\"].json.language }}"
          },
          "matchingColumns": [
            "address"
          ],
          "schema": [
            {
              "id": "keyword",
              "displayName": "keyword",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "address",
              "displayName": "address",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "sorting",
              "displayName": "sorting",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            },
            {
              "id": "language",
              "displayName": "language",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.6,
      "position": [
        2120,
        100
      ],
      "id": "15c26584-ef4b-4a46-85c8-068e453dd01a",
      "name": "Google Sheets",
      "alwaysOutputData": true,
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "Eio1vCGLFfsdnqQZ",
          "name": "Google Sheets account - MJ "
        }
      }
    },
    {
      "parameters": {
        "content": "## 정보 저장",
        "height": 260
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        2060,
        0
      ],
      "id": "0d8048b2-876f-4e93-b48e-f1600fb0f24e",
      "name": "Sticky Note4"
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.manualTrigger",
      "typeVersion": 1,
      "position": [
        120,
        380
      ],
      "id": "b27d9ab8-aba5-473c-af78-3ccce810c94b",
      "name": "When clicking ‘Execute workflow’"
    }
  ],
  "pinData": {
    "query": [
      {
        "json": {
          "query": "인공지능",
          "address": "kangmj0825@gmail.com",
          "language": "ko",
          "sorting": "신모델 개발"
        }
      }
    ]
  },
  "connections": {
    "네이버 뉴스 검색 (Naver API)": {
      "main": [
        [
          {
            "node": "API 필요 데이터 전처리",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HCX 뉴스 기사 리랭킹": {
      "main": [
        [
          {
            "node": "데이터 파싱",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Merge": {
      "main": [
        [
          {
            "node": "랭킹 + 기존 데이터 통합",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "query": {
      "main": [
        [
          {
            "node": "네이버 뉴스 검색 (Naver API)",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Header/Footer HTML4": {
      "main": [
        [
          {
            "node": "이메일 발송",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "News Block HTML": {
      "main": [
        [
          {
            "node": "Header/Footer HTML4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "랭킹 + 기존 데이터 통합": {
      "main": [
        [
          {
            "node": "Limit",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "데이터 파싱": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "API 필요 데이터 전처리": {
      "main": [
        [
          {
            "node": "모델 입력 처리용 Flatten",
            "type": "main",
            "index": 0
          },
          {
            "node": "Merge",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "모델 입력 처리용 Flatten": {
      "main": [
        [
          {
            "node": "HCX 뉴스 기사 리랭킹",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "이메일 발송": {
      "main": [
        [
          {
            "node": "Google Sheets",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Limit": {
      "main": [
        [
          {
            "node": "News Block HTML",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Webhook 트리거": {
      "main": [
        [
          {
            "node": "query",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "60bf43f1-9fae-4dd0-9995-492196bfc624",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "5b40a9494f24c8b44272b9f4d7c9963f14b3c071b2bdbe4d4eb707fe6a8210b2"
  },
  "id": "rOpayPtLknuqel1H",
  "tags": []
}